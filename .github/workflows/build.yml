name: Build GDExtension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            platform: windows
            arch: x86_64
            target: template_debug
          - os: windows-latest
            platform: windows
            arch: x86_64
            target: template_release
          - os: windows-latest
            platform: windows
            arch: arm64
            target: template_debug
          - os: windows-latest
            platform: windows
            arch: arm64
            target: template_release
          
          # Linux
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            target: template_debug
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            target: template_release
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            target: template_debug
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            target: template_release

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install SCons
      run: |
        python -m pip install --upgrade pip
        pip install scons

    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Build GDExtension
      run: |
        scons target=${{ matrix.target }} platform=${{ matrix.platform }} arch=${{ matrix.arch }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.target }}
        path: project/addons/myextension/bin/
        retention-days: 30

  package:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Package addon
      run: |
        mkdir -p package
        cp -r project/addons/myextension package/
        
        # Copy all built binaries
        for artifact in artifacts/*/; do
          if [ -d "$artifact" ]; then
            cp -r "$artifact"* package/myextension/bin/ 2>/dev/null || true
          fi
        done
        
        # Create zip file
        cd package
        zip -r ../myextension-addon.zip myextension/
        cd ..

    - name: Upload addon package
      uses: actions/upload-artifact@v3
      with:
        name: myextension-addon
        path: myextension-addon.zip
        retention-days: 30
